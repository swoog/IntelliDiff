// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace IntelliDiff.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class CompareTextFilesFeature : Xunit.IUseFixture<CompareTextFilesFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CompareTextFiles.feature"
#line hidden
        
        public CompareTextFilesFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Compare Text Files", "In order to avoid comparison tool.\r\nAs a user\r\nI want to compare text file", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(CompareTextFilesFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Compare Text Files")]
        [Xunit.TraitAttribute("Description", "Compare same file")]
        public virtual void CompareSameFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare same file", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line hidden
#line 7
 testRunner.Given("I have the first file:", "Line 1", ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 11
 testRunner.And("I have the seconde file :", "Line 1", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.When("I press compare", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("the result is equal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Compare Text Files")]
        [Xunit.TraitAttribute("Description", "Compare different file")]
        public virtual void CompareDifferentFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare different file", ((string[])(null)));
#line 18
this.ScenarioSetup(scenarioInfo);
#line hidden
#line 19
 testRunner.Given("I have the first file:", "Line 1", ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 23
 testRunner.And("I have the seconde file :", "Line 2", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.When("I press compare", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.Then("the result is not equal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Compare Text Files")]
        [Xunit.TraitAttribute("Description", "Compare file with add line")]
        public virtual void CompareFileWithAddLine()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare file with add line", ((string[])(null)));
#line 30
this.ScenarioSetup(scenarioInfo);
#line hidden
#line 31
 testRunner.Given("I have the first file:", "Line 1", ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 35
 testRunner.And("I have the seconde file :", "Line 1\r\nLine 2", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.When("I press compare", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line",
                        "Type",
                        "Value"});
            table1.AddRow(new string[] {
                        "2",
                        "Add",
                        "Line 2"});
#line 41
 testRunner.Then("the result is :", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Compare Text Files")]
        [Xunit.TraitAttribute("Description", "Compare file with del line")]
        public virtual void CompareFileWithDelLine()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Compare file with del line", ((string[])(null)));
#line 45
this.ScenarioSetup(scenarioInfo);
#line hidden
#line 46
 testRunner.Given("I have the first file:", "Line 1\r\nLine 2", ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 51
 testRunner.And("I have the seconde file :", "Line 1", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.When("I press compare", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Line",
                        "Type",
                        "Value"});
            table2.AddRow(new string[] {
                        "2",
                        "Del",
                        "Line 2"});
#line 56
 testRunner.Then("the result is :", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                CompareTextFilesFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                CompareTextFilesFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
